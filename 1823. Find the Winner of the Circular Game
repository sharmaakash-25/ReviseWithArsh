class Solution {
public:
    int findTheWinner(int n, int k) {
    vector<int>v;
    for(int i=1;i<=n;i++){
        v.push_back(i);
    }    
    int i = 0;
    while(v.size() > 1){
        int idx = (i+k-1)% v.size();
        v.erase(v.begin()+idx);
        i = idx;
    }
    return v[0];
    }
};


class Solution {
public:
    int findTheWinner(int n, int k) {
    queue<int>q;
    for(int i=1;i<=n;i++){
        q.push(i);
    }    
    while(q.size() > 1){
        for(int count=1;count<=k-1;count++){
            q.push(q.front());
            q.pop();
        }
        q.pop();
    }
    return q.front();
    }
};


//recursion
//ind+1 = ans
class Solution {
public:
    int find(int n,int k){
        if(n==1) return 0;
        int ind = find(n-1,k);
        ind = (ind+k)%n;    //original array me index k liye
        return ind;
    }
    int findTheWinner(int n, int k) {
    int ans_ind = find(n,k);
    return ans_ind+1;
    }
};
